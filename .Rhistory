rootNode[[1]][[2]][[2]]
rootNode[[1]][[3]][[2]]
rootNode[[1]][[4]][[2]]
rootNode[[2]][[4]][[2]]
rootNode[[3]][[4]][[2]]
rootNode[[1]][[4]][[2]]
rootNode[[1]][[4]][[3]]
rootNode[[1]][[4]][[2]]
rootNode[[1]][[100]][[2]]
rootNode[[1]][[1000]][[2]]
rootNode[[1]][[2000]][[2]]
rootNode[[1]][[1500]][[2]]
rootNode[[1]][[1250]][[2]]
rootNode[[1]][[1350]][[2]]
rootNode[[1]][[1290]][[2]]
rootNode[[1]][[1300]][[2]]
rootNode[[1]][[1325]][[2]]
rootNode[[1]][[1345]][[2]]
rootNode[[1]][[1335]][[2]]
rootNode[[1]][[1330]][[2]]
rootNode[[1]][[1328]][[2]]
rootNode[[1]][[1325]][[2]]
rootNode[[1]][[1327]][[2]]
rootNode[[1]][[1329]][[2]]
rootNode[[1]][[1327]][[2]]
for i in 1:1327 {}
for i in 1:1327 {}
for (i in 1:1327) {}
for (i in 1:1327) {rootNode[[1]][[i]]}
for (i in 1:1327) {if (rootNode[[1]][[i]][[2]] == c("<zipcode>",i,"</zipcode") {n = n+1}}
n <- 0
for (i in 1:1327) {if (rootNode[[1]][[i]][[2]] == c("<zipcode>",i,"</zipcode") {n = n+1}}
a <- paste("<zipcode>","21224","</zipcode>")
a
? Paste
? paste
a <- paste("<zipcode>",21224,"</zipcode>", sep="")
a
for (i in 1:1327) {if (rootNode[[1]][[i]][[2]] == paste("<zipcode>",i,"</zipcode", sep="") {n = n+1}}
for (i in 1:1327) {if (rootNode[[1]][[i]][[2]] == paste("<zipcode>",i,"</zipcode", sep="")) {n = n+1}}
?xml
a <- xml("foo")
a
isXMLString(a)
a <- xmlParseString(rootNode[[1]][[2]][[2]])
rootNode[[1]][[2]][[2]]
? xmlParseString
xmlParseString("<zipcode>21231</zipcode>")
xmlParseString(<zipcode>21231</zipcode>)
?xml
? string
?rip
?extract
?XML
?xml
?read.xml
xmlSApply(rootNode, xmlValue)
xmlTApply(rootNode, xmlValue)
?xmlSApply
xmlSApply(rootNode, xmlName)
xmlSApply(rootNode[[1]], xmlName)
xmlSApply(rootNode[[1]], xmlAttrs)
xmlSApply(rootNode[[1]], xmlSize)
xmlApply(rootNode[[1]], xmlSize)
xmlSApply(rootNode[[1]][[]][[2]], xmlVal)
xmlSApply(rootNode[[1]][[i]][[2]], xmlVal)
xmlSApply(rootNode[[1]][[2]], xmlVal)
xmlSApply(rootNode[[1]])(,[[2]]), xmlVal)
xmlSApply(rootNode[[1]](,[[2]]), xmlVal)
xmlSApply(rootNode[[1]][[2]], xmlVal)
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
library(rJava)
library(xlsx)
?xmlVal
?xmlValue
doc
head(doc)
head(doc, 20)
head(rootNode)
library("data.table")
install.packages("data.table")
library("data.table")
libray(nlme)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
? lines
? points
? text
? points
? lines
? lpoints()
? splom
? par
? trellis.par.set
? splom
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.1")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
? geom
?geom
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(votes, rating, data = movies) + geom_smooth()
rm(list=ls())
library(UsingR); data(galton)
library(swirl)
install_from_swirl("Regression Models")
swirl()
swirl()
fit <- lm(child ~ parent, galton)
sqrt(sum((fit$residuals)^2/(928-2))
)
sqrt(sum((fit$residuals)^2/(n-2))
)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
deviance(fit)/(n-2)
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
? deviance
sRes <- deviance(galton$child)
sRes <- deviance(sum((fit$residuals)^2))
sRes <- sum((fit$residuals)^2)
sRes <- deviance(fit)
sRes <- sum(fit$residuals)
1-sRes/sTot
summary(fit)$r.squared
(cor(galton$child, galton$parent))^2
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm(child ~ ones+parent -1, galton)
lm(child ~ parent, galton)
lm(child~1, galton)
View(trees)
fit <- lm(Volume ~ Girth+Height+Constant -1, trees)
trees2 <- eliminate("Girth", trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
rm(list=ls())
source('C:/Users/JXie/Desktop/Coursera/R/Regression/RegressionQz2.R')
summary(fit)
? qnorm
coef(fit)
yhat_lin <- mtcars$wt * coef(fit)[2] + coef(fit)[1]
y <- mtcars$wt
y <- mtcars$mpg
sqe_lin <- sum(y-yhat_lin)^2
y-yhat_lin
sqe_lin <- 0
for i in 1:32 {}
for (i in 1:32) { sqe_lin <- sqe_lin + (y[i]-yhat_lin[i])^}
for (i in 1:32) { sqe_lin <- sqe_lin + (y[i]-yhat_lin[i])^2}
yhat_inte <- ones(32)
yhat_inte <- ones[1, length(mtcars)]
yhat_inte <- one[1, length(mtcars)]
ones <- c(rep(1), 32)
ones <- c(repeat(32), 1)
? repeat
()
? rep
rep(1:4, 2)
ones <- c(rep(1), 32)
ones <- rep(1, 32)
yhat_inte <- ones * coef(fit)[1]
for (i in 1:32) { sqe_inte <- sqe_inte + (y[i]-yhat_inte[i])^2}
sqe_inte <- 0
for (i in 1:32) { sqe_inte <- sqe_inte + (y[i]-yhat_inte[i])^2}
sqe_lin/sqe_inte
yhat_inte <- ones * mean(mtcars$mpg)
sqe_inte <- 0
for (i in 1:32) { sqe_inte <- sqe_inte + (y[i]-yhat_inte[i])^2}
sqe_lin/sqe_inte
yhat_lin <- mtcars$wt * coef(fit)[2] + coef(fit)[1]
sqe_lin/sqe_inte
yhat_inte <- ones * coef(fit)[1]
rm(list=ls())
data(mtcars)
fit <- lm(mpg ~ wt, mtcars)
coef(fit)## Question 9
y <- mtcars$mpg
yhat_lin <- mtcars$wt * coef(fit)[2] + coef(fit)[1]
## Calc sqe of lm of intercept and slope
yhat_lin <- mtcars$wt * coef(fit)[2] + coef(fit)[1]
sqe_lin <- 0
for (i in 1:32) { sqe_lin <- sqe_lin + (y[i]-yhat_lin[i])^2} ## equal to 278.32
## Calc sqe of only intercept
ones <- rep(1, 32)
yhat_inte <- ones * mean(mtcars$mpg) ## equal to 20.1
sqe_inte <- 0
for (i in 1:32) { sqe_inte <- sqe_inte + (y[i]-yhat_inte[i])^2} ## equal to 1126.05
sqe_lin/sqe_inte  ## equal to 0.2471672
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit_xy <- lm(y ~ x)
coef(fit_xy)
summary(fit_xy)
.223*sqrt(7)
.223/sqrt(7)
.223*sqrt(7)
? qt
? lm
? predict
coef(fit)
predict(fit, mean(mtcars$wt))
mtcars$wt
predict(fit, mean(mtcars$wt))
mean(mtcars$wt)
predict(fit, mean(mtcars$wt))
ave_wt <-mean(mtcars$wt)
predict(fit, ave_wt)
predict(fit, 3.21725)
fit <- lm(mpg ~ wt, mtcars)
fit
predict(fit, 3.21725)
? predict
predict(fit, 3.21725)
predict(fit)
predict(fit$mpg, mean(mtcars$wt))
predict(fit, wt = mean(mtcars$wt))
predict(fit, wt = 3.21725
)
predict(fit, wt = 3.21725)
rm(list=ls())
fit <- lm(mpg ~ wt, mtcars)
predict(fit, wt = mean(mtcars$wt))
coef(fit)[1] + coef(fit)[2]*mean(mtcars$wt)
coef(fit)[1]
mpg_avewt <- coef(fit)[1] + coef(fit)[2]*mean(mtcars$wt)
class(mpg_avewt)
mpg_avewt + c(-1,1)*qnorm(.975)*mean(mtcars$mpg)
qnorm(.975)
? qnorm
mpg_avewt + c(-1,1)*qnorm(.975, mean(mtcars$mpg), sd(mtcars$mpg))
fit$df
sd(mtcars$mpg)
summary(fit)
? predict
mpg_avewt + c(-1,1)*qnorm(.975, mpg_avewt, sd=3.046)
mpg_avewt + c(-1,1)*qnorm(.975, 0, sd=3.046)
mpg_avewt + c(-1,1)*qnorm(.975, 0, sd=.5591)
p1 <- predict(fit, wt=mean(mtcars$wt), interval = ("Confidence"))
p1 <- predict(fit, wt=mean(mtcars$wt), interval = ("confidence"))
p1
mean(mtcars$mpg)
mean(mtcars$wt)
mtcars$wt
p1 <- predict(fit, wt=mean(mtcars$wt), interval = ("predict"))
p1 <- predict(fit, wt=mean(mtcars$wt), interval = ("prediction"))
p2 <- predict(fit, wt=mean(mtcars$wt), interval = ("prediction"))
p2
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1)*qt(.975, df = fit$df)* sumCoef[2,2]
Coef_interval <- sumCoef[2,1] + c(-1, 1)*qt(.975, df = fit$df)* sumCoef[2,2]
Coef_interval * 2
help(predict.lm)
data(mtcars)
fit <- lm(mpg ~ wt, mtcars)
newdata <- datra.frame(wt = mean(mtcars$wt))
p1 <- predict(fit, newdata, inteval = ("confidence"))
data(mtcars)
fit <- lm(mpg ~ wt, mtcars)
newdata <- data.frame(wt = mean(mtcars$wt))
p1 <- predict(fit, newdata, inteval = ("confidence"))
predict(fit, newdata, inteval = ("confidence"))
data(mtcars)
fit <- lm(mpg ~ wt, mtcars)
newdata <- data.frame(wt = mtcars$wt)
p1 <- predict(fit, newdata, inteval = ("confidence"))
data(mtcars)
fit <- lm(mpg ~ wt, mtcars)
newdata <- data.frame(wt = mean(mtcars$wt))
p1 <- predict(fit, newdata, interval = ("confidence"))
p1
data(mtcars)
fit <- lm(mpg ~ wt, mtcars)
newdata <- data.frame(wt = 3))
p2 <- predict(fit, newdata, interval = ("prediction"))
newdata <- data.frame(wt = 3)
p2 <- predict(fit, newdata, interval = ("prediction"))
p2
rm(list=ls())
activity <- read.csv("activity.csv") ## 61 days, 17568 obs
summary(activity)
sum(is.na(activity))    ## number of missing values NA's
activity_na_rm <- activity[complete.cases(activity),] ## 53 days, 15264 obs.
setwd("C:/Users/JXie/Desktop/Coursera/R/RepData_PeerAssessment1")
activity <- read.csv("activity.csv") ## 61 days, 17568 obs
summary(activity)
sum(is.na(activity))    ## number of missing values NA's
activity_na_rm <- activity[complete.cases(activity),] ## 53 days, 15264 obs.
library(dplyr)
sum(is.na(activity))    ## number of missing values NA's
steps <- replace(activity$steps, is.na(activity$steps), mean(activity$steps, na.rm=TRUE))
activity_new <- cbind(steps, select(activity, one_of(c("date", "interval"))))
daily_total_steps_new <- tapply(activity_new$steps, activity_new$date, sum)
hist(daily_total_steps_new)
mean_total_steps_new <- mean(tapply(activity_new$steps, activity_new$date, sum), na.rm = TRUE)
paste("new_mean = ", mean_total_steps_new)
median_total_steps_new <- median(tapply(activity_new$steps, activity_new$date, sum), na.rm = TRUE)
paste("new_median = ", median_total_steps_new)
library(ggplot2)
library(chron)
## weekday 45 (12960) and weekend 16 (4608)
weekend <- as.factor(ifelse(is.weekend(activity_new$date), "Yes", "No"))
activity_weekend <- cbind(activity_new, weekend)
## 6. Compare emissions from motor vehicle sources in Baltimore City with emissions from motor vehicle sources
##    in Los Angeles County, California (fips == "06037").
##    Which city has seen greater changes over time in motor vehicle emissions?
MVehicles <- str_detect(as.character(SCC$EI.Sector), "Vehicles")
MVehicles_SCC <- SCC[MVehicles,]
# Subset Baltimore data
NEI_Balt <- NEI[NEI$fips == "24510",]
Balt_MVeh_NEI <- arrange(merge(NEI_Balt, MVehicles_SCC, by.x = "SCC", by.y = "SCC", all.x = TRUE), year)
Balt_MVeh_NEI <- Balt_MVeh_NEI[!is.na(Balt_MVeh_NEI$EI.Sector), ]  ## remove where EI.Sector == NA
# Subset LA data
NEI_LA <- NEI[NEI$fips == "06037",]
LA_MVeh_NEI <- arrange(merge(NEI_LA, MVehicles_SCC, by.x = "SCC", by.y = "SCC", all.x = TRUE), year)
LA_MVeh_NEI <- LA_MVeh_NEI[!is.na(LA_MVeh_NEI$EI.Sector), ]  ## remove where EI.Sector == NA
Year <- unique(Balt_MVeh_NEI$year)
Balt_MVeh_by_year <- split(Balt_MVeh_NEI, Balt_MVeh_NEI$year)
Balt_emission_tons <- lapply(Balt_MVeh_by_year, function(X) sum(X[,"Emissions"]))
LA_MVeh_by_year <- split(LA_MVeh_NEI, LA_MVeh_NEI$year)
LA_emission_tons <- lapply(LA_MVeh_by_year, function(X) sum(X[,"Emissions"]))
## Open png device; create 'plot6.png' in 'plots' directory
png(filename = "./plots/plot6.png", width = 960, height = 480, bg = "transparent")
par(mfrow = c(1,2))
plot(Year, Balt_emission_tons, type = "o", col = "red", pch = 21, lwd = 3, main = "Motor Vehicle PM2.5 Emission in Baltimore")
plot(Year, LA_emission_tons, type = "o", col = "blue", pch = 23, lwd = 3, main = "Motor Vehicle PM2.5 Emission in LA")
dev.off()     ## Close the PNG file device
library(ggplot)
library(ggplot2)
? ggplot
class(activity_weekend)
? summarize
library(dplyr)
? summarize
? summarize
summarise
?summarise
activity_pattern <- summarise(group_by(activity_weekend, interval), mean(steps))
head(activity_pattern)
daily_activity <- tapply(activity_na_rm$steps, activity_na_rm$interval, mean)
plot(unique(activity$interval), daily_activity, type = "l", main = "average daily activity pattern", xlab = "time in 5-min interval", ylab = "activity in steps")
? qplot
data <- activity_weekend %>%
filter(weekend) == "weekend") %>%
group_by(interval) %>%
summarize(steps = sum(steps))
# PLOTTING
#=================================================================================
png(file = "activity_patterns_weekend.png")
plot <- ggplot(data, aes(factor(interval), steps))
plot + geom_bar(stat = "identity", col = "red", fill = "lawngreen") +
labs(title = "Activity: Weekday vs Weekend") + xlab("Interval")
dev.off()
data <- activity_weekend %>%
filter(weekend) == "weekend") %>%
group_by(interval) %>%
summarize(steps = sum(steps))
# PLOTTING
#=================================================================================
png(file = "activity_patterns_weekend.png")
plot <- ggplot(data, aes(factor(interval), steps))
plot + geom_bar(stat = "weekend", col = "red", fill = "lawngreen") +
labs(title = "Activity: Weekday vs Weekend") + xlab("Interval")
dev.off()
data <- activity_weekend %>%
filter(weekend) == "weekend") %>%
group_by(interval) %>%
summarize(steps = sum(steps))
# PLOTTING
#=================================================================================
png(file = "activity_patterns_weekend.png")
qplot(interval, steps, data)
dev.off()
data <- activity_weekend %>%
filter(weekend) == "weekend") %>%
group_by(interval) %>%
summarize(steps = sum(steps))
# PLOTTING
#=================================================================================
png(file = "activity_patterns_weekend.png")
qplot(data$interval, steps, data)
dev.off()
weekend <- as.factor(ifelse(is.weekend(activity_new$date), "weekend", "weekday"))
head(weekend)
summary(weekend)
? ddply
pattern_weekend <- ddply(activity_weekend,
.(weekend, interval), summarize,
pattern_weekend = sum(steps))
? ddply
library(plyr)
pattern_weekend <- ddply(activity_weekend,
.(weekend, interval), summarize,
pattern_weekend = sum(steps))
summary(pattern_weekend)
table(pattern_weekend)
summary(pattern_weekend)
pattern_weekend <- ddply(activity_weekend,
.(weekend, interval), summarize,
pattern_weekend = mean(steps))
summary(pattern_weekend)
png(file = "patterns_weekend.png")
plot <- ggplot(pattern_weekend, aes(factor(interval), interval))
dev.off()
? geom
? library(ggplot2)
? geom
? ggplot
? geom_line
png(file = "patterns_weekend.png")
plot <- ggplot(pattern_weekend, aes(factor(interval), interval))
plot <- geom_line(colour = "red", size = 1)
facet_grid(. ~weekend) +                                  # panels for weekend
labs(x = "Interval") +                                    # add labels to graph
labs(y = "steps") +
labs(title = "activity pattern: weekday vs weekend"
dev.off()
png(file = "patterns_weekend.png")
plot <- ggplot(pattern_weekend, aes(factor(interval), interval))
plot <- geom_line(colour = "red", size = 1)
facet_grid(. ~weekend) +                                  # panels for weekend
labs(x = "Interval") +                                    # add labels to graph
labs(y = "steps") +
labs(title = "activity pattern: weekday vs weekend")
dev.off()
png(file = "pattern.png")
plot <- ggplot(pattern_weekend, aes(factor(interval), interval))
plot <- geom_line(colour = "red", size = 1)
facet_grid(. ~weekend) +                                  # panels for weekend
labs(x = "Interval") +                                    # add labels to graph
labs(y = "steps") +
labs(title = "activity pattern: weekday vs weekend")
dev.off()
png(file = "patterns_weekend.png")
plot <- ggplot(pattern_weekend, aes(factor(interval), interval))
plot <- geom_line(colour = "red", size = 1)
## facet_grid(. ~weekend) +                              # panels for weekend
## labs(x = "Interval") +                                # add labels to graph
## labs(y = "steps") +
## labs(title = "activity pattern: weekday vs weekend")
dev.off()
activity_weekend <- cbind(activity_new, weekend)
pattern_weekend <- ddply(activity_weekend,
.(weekend, interval), summarize,
pattern = mean(steps))
# PLOTTING
png(file = "diff_weekdays.png")
qplot(interval, pattern, data=pattern_weekend, geom="line")
dev.off()
? table
View(pattern_weekend)
View(pattern_weekend)
? facet
qplot
? qplot
png(file = "diff_weekdays.png")
qplot(interval, pattern, data=pattern_weekend, facets = weekend, geom="line")
## plot <- ggplot(pattern_weekend, aes(factor(interval), interval))
## plot <- geom_line(colour = "red", size = 1)
## facet_grid(. ~weekend) +                              # panels for weekend
## labs(x = "Interval") +                                # add labels to graph
## labs(y = "steps") +
## labs(title = "activity pattern: weekday vs weekend")
dev.off()
png(file = "diff_weekdays.png")
qplot(interval, pattern, data=pattern_weekend, facet_grid = .~weekend, geom="line")
dev.off()
png(file = "patterns_weekend.png")
qplot(interval, pattern, data=pattern_weekend, facet_grid = .~weekend, geom="line")
## plot <- ggplot(pattern_weekend, aes(factor(interval), interval))
## plot <- geom_line(colour = "red", size = 1)
## facet_grid(. ~weekend) +                              # panels for weekend
## labs(x = "Interval") +                                # add labels to graph
## labs(y = "steps") +
## labs(title = "activity pattern: weekday vs weekend")
dev.off()
png(file = "patterns_weekend.png")
qplot(interval, pattern, data=pattern_weekend, facets = .~weekend, geom="line")
dev.off()
png(file = "patterns_weekend.png")
qplot(interval, pattern, data=pattern_weekend, geom="line")
dev.off()
qplot(interval, pattern, data=pattern_weekend, facets = weekend ~., geom="line")
? png
? qplot
